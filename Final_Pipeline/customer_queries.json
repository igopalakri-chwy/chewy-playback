{
  "get_cust_orders": "with chris_orders as (\n    select \n        customer_id, \n        order_id, \n        order_date_est, \n        channel, \n        budget, \n        goal,\n        campaign,\n        campaign_id,\n        network, \n        business_channel\n    from \n        mkt_sandbox.TBL_CUSTOMER_ORDER_AGGREGATE \n    where \n        order_date_est between '2025-01-01' and '2025-12-31'\n        and customer_id = {customer_id}\n),\ncustid_orderid_prodid as (\n    select\n        customer_id,\n        order_line_id,\n        order_id,\n        product_id,\n        order_line_quantity,\n        order_status\n    from \n        edldb.ecom.order_line_base\n    where \n        order_status = 'D' \n        and customer_id = {customer_id}\n),\nproduct_details as (\n    select \n        product_id,\n        name,\n        category_level3\n    from edldb.pdm.product \n)\n\nselect \n    c_ord.customer_id,\n    c_ord.order_id,\n    c_ord.order_date_est,\n    cop_id.product_id,\n    cop_id.order_line_quantity,\n    pd.name,\n    pd.category_level3\nfrom \n    chris_orders as c_ord\n    LEFT JOIN custid_orderid_prodid as cop_id\n        ON c_ord.customer_id = cop_id.customer_id \n        AND c_ord.order_id = cop_id.order_id\n    LEFT JOIN product_details as pd\n        ON cop_id.product_id = pd.product_id\norder by \n    c_ord.order_date_est;",
  "get_pet_profiles": "SELECT\n    pp.customer_id,\n    pp.pet_name,\n    pp.pet_type,\n    pp.pet_breed,\n    pp.weight,\n    pp.gender,\n    pp.pet_age,\n    pp.medication\nFROM edldb.chewybi.pet_profile_aggregate pp\nWHERE \n    pp.pp_status   = 'Active' and\n    pp.customer_id = {customer_id}",
  "get_cust_reviews": "select \n    customer_id,\n    review_id,\n    review_title,\n    review_txt\nfrom edldb.cdm.customer_product_rating \nwhere (submission_tm BETWEEN '2025-01-01' AND '2025-12-31')\nand moderation_status = 'APPROVED' \nand review_txt is not null\nand TRY_TO_NUMBER(customer_id) = {customer_id}",
  "get_cust_zipcode": "WITH zip_counts AS (\n    SELECT\n        customer_id,\n        customer_address_zip,\n        customer_address_city,\n        COUNT(*) AS zip_freq\n    FROM edldb.chewybi.customer_addresses\n    WHERE customer_id = {customer_id}\n    GROUP BY customer_id, customer_address_zip, customer_address_city\n),\nranked_zip AS (\n    SELECT *,\n           ROW_NUMBER() OVER (\n               PARTITION BY customer_id\n               ORDER BY zip_freq DESC\n           ) AS rn\n    FROM zip_counts\n)\nSELECT customer_id, customer_address_zip, customer_address_city\nFROM ranked_zip\nWHERE rn = 1",
  "get_yearly_food_count": "WITH parsed_food AS (\n  SELECT\n    ol.product_id,\n    p.name AS product_name,\n    ol.order_line_quantity,\n    ol.order_placed_dttm,\n    \n    -- Extract numeric weight value\n    TRY_TO_NUMBER(\n      REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1)\n    ) AS extracted_weight,\n\n    -- Extract unit\n    REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) AS unit,\n\n    -- Extract pack size\n    TRY_TO_NUMBER(\n      REGEXP_SUBSTR(p.name, '(\\\\d+)\\\\s?(pack|count|ct|bags?)', 1, 1, 'e', 1)\n    ) AS pack_count,\n\n    -- Normalized weight in lbs\n    CASE\n      WHEN REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) = 'oz'\n        THEN TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1)) / 16\n      WHEN REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) = 'mg'\n        THEN TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1)) / 453592\n      WHEN REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) = 'lb'\n        THEN TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1))\n      ELSE NULL\n    END AS weight_in_lbs,\n\n    -- Final food weight = weight × qty × pack size\n    CASE\n      WHEN REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) = 'oz'\n        THEN (TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1)) / 16)\n          * ol.order_line_quantity * COALESCE(TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+)\\\\s?(pack|count|ct|bags?)', 1, 1, 'e', 1)), 1)\n      WHEN REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) = 'mg'\n        THEN (TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1)) / 453592)\n          * ol.order_line_quantity * COALESCE(TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+)\\\\s?(pack|count|ct|bags?)', 1, 1, 'e', 1)), 1)\n      WHEN REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 4) = 'lb'\n        THEN TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+(\\\\.\\\\d+)?)(\\\\s|-)?(oz|lb|mg)', 1, 1, 'e', 1))\n          * ol.order_line_quantity * COALESCE(TRY_TO_NUMBER(REGEXP_SUBSTR(p.name, '(\\\\d+)\\\\s?(pack|count|ct|bags?)', 1, 1, 'e', 1)), 1)\n      ELSE 0\n    END AS total_food_lbs\n\n  FROM edldb.ecom.order_line AS ol\n  JOIN edldb.pdm.product AS p\n    ON ol.product_id = p.product_id\n  WHERE ol.customer_id = {customer_id}\n    AND ol.order_status = 'D'\n    AND p.is_food_flag = TRUE\n    AND ol.order_placed_dttm >= DATE '2025-01-01'\n    AND ol.order_placed_dttm < DATE '2026-01-01'\n)\n\n-- Return all line items + total\nSELECT *,\n  (SELECT ROUND(SUM(total_food_lbs), 2) FROM parsed_food) AS total_lbs_consumed_by_customer\nFROM parsed_food;",
  "get_amt_donated": "SELECT\n  SUM(olb.ORDER_LINE_TOTAL_PRICE) AS amt_donated\nFROM EDLDB.ECOM.ORDER_LINE_BASE olb\nWHERE olb.DONATION_ORG_ID IS NOT NULL\n  AND olb.ORDER_LINE_QUANTITY > 0\n  AND olb.CUSTOMER_ID = {customer_id}",
  "get_cudd_month": "SELECT\n  TO_CHAR(ol.order_placed_dttm, 'Mon') AS month,\n  COUNT(*) AS total_orders\nFROM edldb.ecom.order_line_base AS ol\nWHERE ol.order_status = 'D'\n  AND ol.customer_id = {customer_id}\n  AND YEAR(ol.order_placed_dttm) = 2025\nGROUP BY TO_CHAR(ol.order_placed_dttm, 'Mon')\nORDER BY total_orders DESC\nLIMIT 1;",
  "get_total_months": "SELECT \n  DATEDIFF(MONTH, registration_date, CURRENT_DATE()) AS months_with_chewy\nFROM EDLDB.CDM.CUSTOMER_AGGREGATE\nWHERE CUSTOMER_ID = {customer_id}",
  "get_autoship_savings": "SELECT CUSTOMER_ID, LIFETIME_SAVINGS \nFROM EDLDB.ITEM_LEVEL_AUTOSHIP.CUSTOMER_INFO \nWHERE CUSTOMER_ID = {customer_id}",
  "get_most_ordered": "SELECT\n    ol.product_id,\n    p.NAME,\n    MAX(p.FULLIMAGE) AS full_image,\n    SUM(ol.order_line_quantity) AS total_quantity_ordered\nFROM edldb.ecom.order_line_base AS ol\nJOIN edldb.pdm.product AS p\n    ON ol.product_id = p.product_id\nWHERE ol.order_status = 'D'\n  AND ol.customer_id = {customer_id}\nGROUP BY ol.product_id, p.NAME\nORDER BY total_quantity_ordered DESC\nLIMIT 1;"
} 